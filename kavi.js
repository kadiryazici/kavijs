"use strict"; function _inherits(t, e) { if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), e && _setPrototypeOf(t, e) } function _setPrototypeOf(t, e) { return (_setPrototypeOf = Object.setPrototypeOf || function (t, e) { return t.__proto__ = e, t })(t, e) } function _createSuper(t) { var e = _isNativeReflectConstruct(); return function () { var r, n = _getPrototypeOf(t); if (e) { var o = _getPrototypeOf(this).constructor; r = Reflect.construct(n, arguments, o) } else r = n.apply(this, arguments); return _possibleConstructorReturn(this, r) } } function _possibleConstructorReturn(t, e) { return !e || "object" !== _typeof(e) && "function" != typeof e ? _assertThisInitialized(t) : e } function _assertThisInitialized(t) { if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return t } function _isNativeReflectConstruct() { if ("undefined" == typeof Reflect || !Reflect.construct) return !1; if (Reflect.construct.sham) return !1; if ("function" == typeof Proxy) return !0; try { return Date.prototype.toString.call(Reflect.construct(Date, [], function () { })), !0 } catch (t) { return !1 } } function _getPrototypeOf(t) { return (_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function (t) { return t.__proto__ || Object.getPrototypeOf(t) })(t) } function _instanceof(t, e) { return null != e && "undefined" != typeof Symbol && e[Symbol.hasInstance] ? !!e[Symbol.hasInstance](t) : t instanceof e } function _typeof(t) { "@babel/helpers - typeof"; return (_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (t) { return typeof t } : function (t) { return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t })(t) } function _classCallCheck(t, e) { if (!_instanceof(t, e)) throw new TypeError("Cannot call a class as a function") } function _defineProperties(t, e) { for (var r = 0; r < e.length; r++) { var n = e[r]; n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n) } } function _createClass(t, e, r) { return e && _defineProperties(t.prototype, e), r && _defineProperties(t, r), t } var Kavi = function () { function t(e, r) { if (_classCallCheck(this, t), this.element = !1, "string" == typeof e && (this.element = document.createElement(e)), !e) throw new Error("Expected string but got " + _typeof(e)); var n = (null == r ? void 0 : r.attributes) || null, o = (null == r ? void 0 : r.style) || null, i = (null == r ? void 0 : r.text) || null, s = (null == r ? void 0 : r.html) || null, a = (null == r ? void 0 : r.on) || null, l = (null == r ? void 0 : r.children) || null; if ("style" !== this.element.tagName.toLowerCase() && "script" !== this.element.tagName.toLowerCase() && (this.random = Math.random().toString(), this.random = this.random.slice(this.random.length - 7, this.random.length), this.element.setAttribute("data-Kavi-" + this.random, "")), n && "object" === _typeof(n)) { if (Array.isArray(n)) throw this.Error("Attributes", "Object"); this.setAttributes(n) } else if (n && "object" !== _typeof(n)) throw this.Error("Attributes", "be a Object"); if (i && "string" == typeof i) this.setText(i); else if (i && "string" != typeof i) throw this.Error("Text", "be a String"); if (s && "string" == typeof s) this.setHtml(s); else if (s && "string" != typeof s) throw this.Error("HTML", "be a String"); if (a && "object" === _typeof(a)) { if (Array.isArray(a)) throw this.Error("On", "be a Object"); this.setOn(a) } else if (a && "object" !== _typeof(a)) throw this.Error("On", "be a Object"); if (l && "object" === _typeof(l)) { if (!Array.isArray(l)) throw this.Error("Attributes", "be an Array"); if (!(l.length > 0)) throw this.Error("Attributes", "have at least one element"); this.setChildren(l) } else if (l && "object" !== _typeof(l)) throw this.Error("Children", "be an Array"); if (o && "object" === _typeof(o)) this.setStyle(o); else if ("object" !== _typeof(o)) throw this.Error("Style", "be a Object"); return this.element } return _createClass(t, [{ key: "Error", value: function (t) { function e(e, r) { return t.apply(this, arguments) } return e.toString = function () { return t.toString() }, e }(function (t, e) { return new Error("".concat(t, " must ").concat(e, ".")) }) }, { key: "setChildren", value: function (t) { var e = this; t.forEach(function (t) { e.element.appendChild(t) }) } }, { key: "setAttributes", value: function (t) { for (var e in t) if (t.hasOwnProperty(e)) { var r = t[e]; this.element.setAttribute(e, r) } } }, { key: "setStyle", value: function (t) { var e = ""; for (var r in t) if (t.hasOwnProperty(r)) { var n = t[r]; e += "".concat(this.toKebabCase(r), ": ").concat(n, "; ") } var o = new KaviStyle({ html: "[data-Kavi-".concat(this.random, "] {").concat(e, "}") }); document.head.appendChild(o) } }, { key: "setText", value: function (t) { this.element.insertAdjacentHTML("beforeend", t) } }, { key: "setHtml", value: function (t) { this.element.insertAdjacentText("beforeend", t) } }, { key: "setOn", value: function (t) { var e = this; for (var r in t) t.hasOwnProperty(r) && function () { var n = t[r]; e.element.addEventListener(r, function (t) { n(t, e.element) }) }() } }, { key: "toKebabCase", value: function (t) { return t.replace(/([a-z0-9])([A-Z])/g, "$1-$2").toLowerCase() } }]), t }();["A", "Article", "Div", "H1", "H2", "H3", "H4", "H5", "H6", "Header", "Footer", "P", "Section", "Span", "Button", "Form", "Input", "Select", "Option", "Textarea", "Style", "Address", "B", "Code", "I", "Pre", "Small", "Strong", "Ol", "Li", "Ul", "Caption", "Col", "Colgroup", "Table", "Tbody", "Td", "Tfoot", "Thead", "Th", "Tr", "Audio", "Canvas", "Embed", "Figcaption", "Figure", "Iframe", "Img", "Object", "Param", "Source", "Time", "Video", "Label"].forEach(function (t) { window["Kavi" + t] = function (e) { _inherits(n, Kavi); var r = _createSuper(n); function n(e) { var o; return _classCallCheck(this, n), _possibleConstructorReturn(o = r.call(this, t.toLowerCase(), e), o.element) } return n }() });